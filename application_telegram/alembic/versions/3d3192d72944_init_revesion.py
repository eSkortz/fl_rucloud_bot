"""init revesion

Revision ID: 3d3192d72944
Revises: 
Create Date: 2024-09-21 15:55:41.438988

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3d3192d72944'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('files',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('file_link', sa.TEXT(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_files_id'), 'files', ['id'], unique=False, schema='public')
    op.create_table('folders',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_folders_id'), 'folders', ['id'], unique=False, schema='public')
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('telegram_id', sa.BIGINT(), nullable=False),
    sa.Column('telegram_name', sa.TEXT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_users_id'), 'users', ['id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_users_telegram_id'), 'users', ['telegram_id'], unique=False, schema='public')
    op.create_table('m2m_files_folders',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('file_id', sa.INTEGER(), nullable=False),
    sa.Column('folder_id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['public.files.id'], ),
    sa.ForeignKeyConstraint(['folder_id'], ['public.folders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('folder_id', 'file_id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_m2m_files_folders_file_id'), 'm2m_files_folders', ['file_id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_m2m_files_folders_folder_id'), 'm2m_files_folders', ['folder_id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_m2m_files_folders_id'), 'm2m_files_folders', ['id'], unique=False, schema='public')
    op.create_table('m2m_users_files',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('file_id', sa.INTEGER(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('expired_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['public.files.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'file_id', 'is_active'),
    schema='public'
    )
    op.create_index(op.f('ix_public_m2m_users_files_expired_at'), 'm2m_users_files', ['expired_at'], unique=False, schema='public')
    op.create_index(op.f('ix_public_m2m_users_files_file_id'), 'm2m_users_files', ['file_id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_m2m_users_files_id'), 'm2m_users_files', ['id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_m2m_users_files_is_active'), 'm2m_users_files', ['is_active'], unique=False, schema='public')
    op.create_index(op.f('ix_public_m2m_users_files_user_id'), 'm2m_users_files', ['user_id'], unique=False, schema='public')
    op.create_table('m2m_users_folders',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('folder_id', sa.INTEGER(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('expired_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['folder_id'], ['public.folders.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'folder_id', 'is_active'),
    schema='public'
    )
    op.create_index(op.f('ix_public_m2m_users_folders_expired_at'), 'm2m_users_folders', ['expired_at'], unique=False, schema='public')
    op.create_index(op.f('ix_public_m2m_users_folders_folder_id'), 'm2m_users_folders', ['folder_id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_m2m_users_folders_id'), 'm2m_users_folders', ['id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_m2m_users_folders_is_active'), 'm2m_users_folders', ['is_active'], unique=False, schema='public')
    op.create_index(op.f('ix_public_m2m_users_folders_user_id'), 'm2m_users_folders', ['user_id'], unique=False, schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_public_m2m_users_folders_user_id'), table_name='m2m_users_folders', schema='public')
    op.drop_index(op.f('ix_public_m2m_users_folders_is_active'), table_name='m2m_users_folders', schema='public')
    op.drop_index(op.f('ix_public_m2m_users_folders_id'), table_name='m2m_users_folders', schema='public')
    op.drop_index(op.f('ix_public_m2m_users_folders_folder_id'), table_name='m2m_users_folders', schema='public')
    op.drop_index(op.f('ix_public_m2m_users_folders_expired_at'), table_name='m2m_users_folders', schema='public')
    op.drop_table('m2m_users_folders', schema='public')
    op.drop_index(op.f('ix_public_m2m_users_files_user_id'), table_name='m2m_users_files', schema='public')
    op.drop_index(op.f('ix_public_m2m_users_files_is_active'), table_name='m2m_users_files', schema='public')
    op.drop_index(op.f('ix_public_m2m_users_files_id'), table_name='m2m_users_files', schema='public')
    op.drop_index(op.f('ix_public_m2m_users_files_file_id'), table_name='m2m_users_files', schema='public')
    op.drop_index(op.f('ix_public_m2m_users_files_expired_at'), table_name='m2m_users_files', schema='public')
    op.drop_table('m2m_users_files', schema='public')
    op.drop_index(op.f('ix_public_m2m_files_folders_id'), table_name='m2m_files_folders', schema='public')
    op.drop_index(op.f('ix_public_m2m_files_folders_folder_id'), table_name='m2m_files_folders', schema='public')
    op.drop_index(op.f('ix_public_m2m_files_folders_file_id'), table_name='m2m_files_folders', schema='public')
    op.drop_table('m2m_files_folders', schema='public')
    op.drop_index(op.f('ix_public_users_telegram_id'), table_name='users', schema='public')
    op.drop_index(op.f('ix_public_users_id'), table_name='users', schema='public')
    op.drop_table('users', schema='public')
    op.drop_index(op.f('ix_public_folders_id'), table_name='folders', schema='public')
    op.drop_table('folders', schema='public')
    op.drop_index(op.f('ix_public_files_id'), table_name='files', schema='public')
    op.drop_table('files', schema='public')
    # ### end Alembic commands ###
