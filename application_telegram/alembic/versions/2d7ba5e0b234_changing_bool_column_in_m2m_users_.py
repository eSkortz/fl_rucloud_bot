"""changing bool column in m2m_users_folders

Revision ID: 2d7ba5e0b234
Revises: 55e94ea4fefe
Create Date: 2024-11-19 17:38:57.851376

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2d7ba5e0b234'
down_revision: Union[str, None] = '55e94ea4fefe'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('collaborations_user_id_fkey', 'collaborations', type_='foreignkey')
    op.create_foreign_key(None, 'collaborations', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('m2m_files_folders_folder_id_fkey', 'm2m_files_folders', type_='foreignkey')
    op.drop_constraint('m2m_files_folders_file_id_fkey', 'm2m_files_folders', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_files_folders', 'files', ['file_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'm2m_files_folders', 'folders', ['folder_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('m2m_users_files_user_id_fkey', 'm2m_users_files', type_='foreignkey')
    op.drop_constraint('m2m_users_files_file_id_fkey', 'm2m_users_files', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_users_files', 'files', ['file_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'm2m_users_files', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.add_column('m2m_users_folders', sa.Column('is_root', sa.BOOLEAN(), nullable=False))
    op.drop_index('ix_public_m2m_users_folders_is_owner', table_name='m2m_users_folders')
    op.create_index(op.f('ix_public_m2m_users_folders_is_root'), 'm2m_users_folders', ['is_root'], unique=False, schema='public')
    op.drop_constraint('m2m_users_folders_user_id_fkey', 'm2m_users_folders', type_='foreignkey')
    op.drop_constraint('m2m_users_folders_folder_id_fkey', 'm2m_users_folders', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_users_folders', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'm2m_users_folders', 'folders', ['folder_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_column('m2m_users_folders', 'is_owner')
    op.drop_constraint('m2m_users_organizations_organization_id_fkey', 'm2m_users_organizations', type_='foreignkey')
    op.drop_constraint('m2m_users_organizations_user_id_fkey', 'm2m_users_organizations', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_users_organizations', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'm2m_users_organizations', 'organizations', ['organization_id'], ['id'], source_schema='public', referent_schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'm2m_users_organizations', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_users_organizations', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_users_organizations_user_id_fkey', 'm2m_users_organizations', 'users', ['user_id'], ['id'])
    op.create_foreign_key('m2m_users_organizations_organization_id_fkey', 'm2m_users_organizations', 'organizations', ['organization_id'], ['id'])
    op.add_column('m2m_users_folders', sa.Column('is_owner', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'm2m_users_folders', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_users_folders', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_users_folders_folder_id_fkey', 'm2m_users_folders', 'folders', ['folder_id'], ['id'])
    op.create_foreign_key('m2m_users_folders_user_id_fkey', 'm2m_users_folders', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_public_m2m_users_folders_is_root'), table_name='m2m_users_folders', schema='public')
    op.create_index('ix_public_m2m_users_folders_is_owner', 'm2m_users_folders', ['is_owner'], unique=False)
    op.drop_column('m2m_users_folders', 'is_root')
    op.drop_constraint(None, 'm2m_users_files', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_users_files', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_users_files_file_id_fkey', 'm2m_users_files', 'files', ['file_id'], ['id'])
    op.create_foreign_key('m2m_users_files_user_id_fkey', 'm2m_users_files', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'm2m_files_folders', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_files_folders', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_files_folders_file_id_fkey', 'm2m_files_folders', 'files', ['file_id'], ['id'])
    op.create_foreign_key('m2m_files_folders_folder_id_fkey', 'm2m_files_folders', 'folders', ['folder_id'], ['id'])
    op.drop_constraint(None, 'collaborations', schema='public', type_='foreignkey')
    op.create_foreign_key('collaborations_user_id_fkey', 'collaborations', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###
