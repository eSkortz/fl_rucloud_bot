"""another changes

Revision ID: 13530118dfd8
Revises: 6023ef5ba7d3
Create Date: 2024-11-19 18:52:48.653741

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '13530118dfd8'
down_revision: Union[str, None] = '6023ef5ba7d3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('m2m_organizations_folders',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('organization_id', sa.INTEGER(), nullable=False),
    sa.Column('folder_id', sa.INTEGER(), nullable=False),
    sa.Column('is_root', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['folder_id'], ['public.folders.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['public.organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'folder_id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_m2m_organizations_folders_folder_id'), 'm2m_organizations_folders', ['folder_id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_m2m_organizations_folders_id'), 'm2m_organizations_folders', ['id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_m2m_organizations_folders_is_root'), 'm2m_organizations_folders', ['is_root'], unique=False, schema='public')
    op.create_index(op.f('ix_public_m2m_organizations_folders_organization_id'), 'm2m_organizations_folders', ['organization_id'], unique=False, schema='public')
    op.drop_index('ix_public_m2m_users_files_expired_at', table_name='m2m_users_files')
    op.drop_index('ix_public_m2m_users_files_file_id', table_name='m2m_users_files')
    op.drop_index('ix_public_m2m_users_files_id', table_name='m2m_users_files')
    op.drop_index('ix_public_m2m_users_files_is_active', table_name='m2m_users_files')
    op.drop_index('ix_public_m2m_users_files_is_owner', table_name='m2m_users_files')
    op.drop_index('ix_public_m2m_users_files_user_id', table_name='m2m_users_files')
    op.drop_table('m2m_users_files')
    op.add_column('collaborations', sa.Column('uuid_name', sa.TEXT(), nullable=False))
    op.drop_index('ix_public_collaborations_is_deleted', table_name='collaborations')
    op.drop_constraint('collaborations_user_id_fkey', 'collaborations', type_='foreignkey')
    op.create_foreign_key(None, 'collaborations', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_column('collaborations', 'is_deleted')
    op.drop_constraint('m2m_files_folders_file_id_fkey', 'm2m_files_folders', type_='foreignkey')
    op.drop_constraint('m2m_files_folders_folder_id_fkey', 'm2m_files_folders', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_files_folders', 'folders', ['folder_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'm2m_files_folders', 'files', ['file_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_index('ix_public_m2m_users_folders_is_active', table_name='m2m_users_folders')
    op.drop_constraint('m2m_users_folders_user_id_folder_id_is_active_key', 'm2m_users_folders', type_='unique')
    op.create_unique_constraint(None, 'm2m_users_folders', ['user_id', 'folder_id'], schema='public')
    op.drop_constraint('m2m_users_folders_user_id_fkey', 'm2m_users_folders', type_='foreignkey')
    op.drop_constraint('m2m_users_folders_folder_id_fkey', 'm2m_users_folders', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_users_folders', 'folders', ['folder_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'm2m_users_folders', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_column('m2m_users_folders', 'is_active')
    op.drop_constraint('m2m_users_organizations_organization_id_fkey', 'm2m_users_organizations', type_='foreignkey')
    op.drop_constraint('m2m_users_organizations_user_id_fkey', 'm2m_users_organizations', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_users_organizations', 'organizations', ['organization_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'm2m_users_organizations', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'm2m_users_organizations', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_users_organizations', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_users_organizations_user_id_fkey', 'm2m_users_organizations', 'users', ['user_id'], ['id'])
    op.create_foreign_key('m2m_users_organizations_organization_id_fkey', 'm2m_users_organizations', 'organizations', ['organization_id'], ['id'])
    op.add_column('m2m_users_folders', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'm2m_users_folders', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_users_folders', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_users_folders_folder_id_fkey', 'm2m_users_folders', 'folders', ['folder_id'], ['id'])
    op.create_foreign_key('m2m_users_folders_user_id_fkey', 'm2m_users_folders', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'm2m_users_folders', schema='public', type_='unique')
    op.create_unique_constraint('m2m_users_folders_user_id_folder_id_is_active_key', 'm2m_users_folders', ['user_id', 'folder_id', 'is_active'])
    op.create_index('ix_public_m2m_users_folders_is_active', 'm2m_users_folders', ['is_active'], unique=False)
    op.drop_constraint(None, 'm2m_files_folders', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_files_folders', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_files_folders_folder_id_fkey', 'm2m_files_folders', 'folders', ['folder_id'], ['id'])
    op.create_foreign_key('m2m_files_folders_file_id_fkey', 'm2m_files_folders', 'files', ['file_id'], ['id'])
    op.add_column('collaborations', sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'collaborations', schema='public', type_='foreignkey')
    op.create_foreign_key('collaborations_user_id_fkey', 'collaborations', 'users', ['user_id'], ['id'])
    op.create_index('ix_public_collaborations_is_deleted', 'collaborations', ['is_deleted'], unique=False)
    op.drop_column('collaborations', 'uuid_name')
    op.create_table('m2m_users_files',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('expired_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('is_owner', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], name='m2m_users_files_file_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='m2m_users_files_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='m2m_users_files_pkey'),
    sa.UniqueConstraint('user_id', 'file_id', 'is_active', name='m2m_users_files_user_id_file_id_is_active_key')
    )
    op.create_index('ix_public_m2m_users_files_user_id', 'm2m_users_files', ['user_id'], unique=False)
    op.create_index('ix_public_m2m_users_files_is_owner', 'm2m_users_files', ['is_owner'], unique=False)
    op.create_index('ix_public_m2m_users_files_is_active', 'm2m_users_files', ['is_active'], unique=False)
    op.create_index('ix_public_m2m_users_files_id', 'm2m_users_files', ['id'], unique=False)
    op.create_index('ix_public_m2m_users_files_file_id', 'm2m_users_files', ['file_id'], unique=False)
    op.create_index('ix_public_m2m_users_files_expired_at', 'm2m_users_files', ['expired_at'], unique=False)
    op.drop_index(op.f('ix_public_m2m_organizations_folders_organization_id'), table_name='m2m_organizations_folders', schema='public')
    op.drop_index(op.f('ix_public_m2m_organizations_folders_is_root'), table_name='m2m_organizations_folders', schema='public')
    op.drop_index(op.f('ix_public_m2m_organizations_folders_id'), table_name='m2m_organizations_folders', schema='public')
    op.drop_index(op.f('ix_public_m2m_organizations_folders_folder_id'), table_name='m2m_organizations_folders', schema='public')
    op.drop_table('m2m_organizations_folders', schema='public')
    # ### end Alembic commands ###
