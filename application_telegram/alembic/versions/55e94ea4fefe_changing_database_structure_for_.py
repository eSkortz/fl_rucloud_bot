"""changing database structure for collaborations and organization

Revision ID: 55e94ea4fefe
Revises: 3d3192d72944
Create Date: 2024-11-19 17:20:14.111092

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '55e94ea4fefe'
down_revision: Union[str, None] = '3d3192d72944'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='public'
    )
    op.create_index(op.f('ix_public_organizations_id'), 'organizations', ['id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_organizations_is_deleted'), 'organizations', ['is_deleted'], unique=False, schema='public')
    op.create_index(op.f('ix_public_organizations_user_id'), 'organizations', ['user_id'], unique=False, schema='public')
    op.create_table('collaborations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='public'
    )
    op.create_index(op.f('ix_public_collaborations_id'), 'collaborations', ['id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_collaborations_is_deleted'), 'collaborations', ['is_deleted'], unique=False, schema='public')
    op.create_index(op.f('ix_public_collaborations_user_id'), 'collaborations', ['user_id'], unique=False, schema='public')
    op.create_table('m2m_users_organizations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('organization_id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['public.organizations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'organization_id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_m2m_users_organizations_id'), 'm2m_users_organizations', ['id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_m2m_users_organizations_organization_id'), 'm2m_users_organizations', ['organization_id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_m2m_users_organizations_user_id'), 'm2m_users_organizations', ['user_id'], unique=False, schema='public')
    op.drop_constraint('m2m_files_folders_file_id_fkey', 'm2m_files_folders', type_='foreignkey')
    op.drop_constraint('m2m_files_folders_folder_id_fkey', 'm2m_files_folders', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_files_folders', 'folders', ['folder_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'm2m_files_folders', 'files', ['file_id'], ['id'], source_schema='public', referent_schema='public')
    op.add_column('m2m_users_files', sa.Column('is_owner', sa.BOOLEAN(), nullable=False))
    op.alter_column('m2m_users_files', 'expired_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.create_index(op.f('ix_public_m2m_users_files_is_owner'), 'm2m_users_files', ['is_owner'], unique=False, schema='public')
    op.drop_constraint('m2m_users_files_file_id_fkey', 'm2m_users_files', type_='foreignkey')
    op.drop_constraint('m2m_users_files_user_id_fkey', 'm2m_users_files', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_users_files', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'm2m_users_files', 'files', ['file_id'], ['id'], source_schema='public', referent_schema='public')
    op.add_column('m2m_users_folders', sa.Column('is_owner', sa.BOOLEAN(), nullable=False))
    op.alter_column('m2m_users_folders', 'expired_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.create_index(op.f('ix_public_m2m_users_folders_is_owner'), 'm2m_users_folders', ['is_owner'], unique=False, schema='public')
    op.drop_constraint('m2m_users_folders_folder_id_fkey', 'm2m_users_folders', type_='foreignkey')
    op.drop_constraint('m2m_users_folders_user_id_fkey', 'm2m_users_folders', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_users_folders', 'folders', ['folder_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'm2m_users_folders', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'm2m_users_folders', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_users_folders', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_users_folders_user_id_fkey', 'm2m_users_folders', 'users', ['user_id'], ['id'])
    op.create_foreign_key('m2m_users_folders_folder_id_fkey', 'm2m_users_folders', 'folders', ['folder_id'], ['id'])
    op.drop_index(op.f('ix_public_m2m_users_folders_is_owner'), table_name='m2m_users_folders', schema='public')
    op.alter_column('m2m_users_folders', 'expired_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('m2m_users_folders', 'is_owner')
    op.drop_constraint(None, 'm2m_users_files', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_users_files', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_users_files_user_id_fkey', 'm2m_users_files', 'users', ['user_id'], ['id'])
    op.create_foreign_key('m2m_users_files_file_id_fkey', 'm2m_users_files', 'files', ['file_id'], ['id'])
    op.drop_index(op.f('ix_public_m2m_users_files_is_owner'), table_name='m2m_users_files', schema='public')
    op.alter_column('m2m_users_files', 'expired_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('m2m_users_files', 'is_owner')
    op.drop_constraint(None, 'm2m_files_folders', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_files_folders', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_files_folders_folder_id_fkey', 'm2m_files_folders', 'folders', ['folder_id'], ['id'])
    op.create_foreign_key('m2m_files_folders_file_id_fkey', 'm2m_files_folders', 'files', ['file_id'], ['id'])
    op.drop_index(op.f('ix_public_m2m_users_organizations_user_id'), table_name='m2m_users_organizations', schema='public')
    op.drop_index(op.f('ix_public_m2m_users_organizations_organization_id'), table_name='m2m_users_organizations', schema='public')
    op.drop_index(op.f('ix_public_m2m_users_organizations_id'), table_name='m2m_users_organizations', schema='public')
    op.drop_table('m2m_users_organizations', schema='public')
    op.drop_index(op.f('ix_public_collaborations_user_id'), table_name='collaborations', schema='public')
    op.drop_index(op.f('ix_public_collaborations_is_deleted'), table_name='collaborations', schema='public')
    op.drop_index(op.f('ix_public_collaborations_id'), table_name='collaborations', schema='public')
    op.drop_table('collaborations', schema='public')
    op.drop_index(op.f('ix_public_organizations_user_id'), table_name='organizations', schema='public')
    op.drop_index(op.f('ix_public_organizations_is_deleted'), table_name='organizations', schema='public')
    op.drop_index(op.f('ix_public_organizations_id'), table_name='organizations', schema='public')
    op.drop_table('organizations', schema='public')
    # ### end Alembic commands ###
