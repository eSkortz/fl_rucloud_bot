"""adding path for file

Revision ID: a10b5620be8c
Revises: 6e8073bdd485
Create Date: 2024-11-20 13:16:02.711915

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a10b5620be8c'
down_revision: Union[str, None] = '6e8073bdd485'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('collaborations_user_id_fkey', 'collaborations', type_='foreignkey')
    op.create_foreign_key(None, 'collaborations', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.add_column('files', sa.Column('path', sa.TEXT(), nullable=False))
    op.drop_column('files', 'file_link')
    op.drop_constraint('m2m_files_folders_folder_id_fkey', 'm2m_files_folders', type_='foreignkey')
    op.drop_constraint('m2m_files_folders_file_id_fkey', 'm2m_files_folders', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_files_folders', 'files', ['file_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'm2m_files_folders', 'folders', ['folder_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.drop_constraint('m2m_folders_folders_child_folder_id_fkey', 'm2m_folders_folders', type_='foreignkey')
    op.drop_constraint('m2m_folders_folders_parent_folder_id_fkey', 'm2m_folders_folders', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_folders_folders', 'folders', ['child_folder_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'm2m_folders_folders', 'folders', ['parent_folder_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.drop_constraint('m2m_organizations_folders_folder_id_fkey', 'm2m_organizations_folders', type_='foreignkey')
    op.drop_constraint('m2m_organizations_folders_organization_id_fkey', 'm2m_organizations_folders', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_organizations_folders', 'folders', ['folder_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'm2m_organizations_folders', 'organizations', ['organization_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.drop_constraint('m2m_users_folders_user_id_fkey', 'm2m_users_folders', type_='foreignkey')
    op.drop_constraint('m2m_users_folders_folder_id_fkey', 'm2m_users_folders', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_users_folders', 'folders', ['folder_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'm2m_users_folders', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.drop_constraint('m2m_users_organizations_user_id_fkey', 'm2m_users_organizations', type_='foreignkey')
    op.drop_constraint('m2m_users_organizations_organization_id_fkey', 'm2m_users_organizations', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_users_organizations', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'm2m_users_organizations', 'organizations', ['organization_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'm2m_users_organizations', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_users_organizations', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_users_organizations_organization_id_fkey', 'm2m_users_organizations', 'organizations', ['organization_id'], ['id'])
    op.create_foreign_key('m2m_users_organizations_user_id_fkey', 'm2m_users_organizations', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'm2m_users_folders', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_users_folders', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_users_folders_folder_id_fkey', 'm2m_users_folders', 'folders', ['folder_id'], ['id'])
    op.create_foreign_key('m2m_users_folders_user_id_fkey', 'm2m_users_folders', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'm2m_organizations_folders', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_organizations_folders', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_organizations_folders_organization_id_fkey', 'm2m_organizations_folders', 'organizations', ['organization_id'], ['id'])
    op.create_foreign_key('m2m_organizations_folders_folder_id_fkey', 'm2m_organizations_folders', 'folders', ['folder_id'], ['id'])
    op.drop_constraint(None, 'm2m_folders_folders', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_folders_folders', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_folders_folders_parent_folder_id_fkey', 'm2m_folders_folders', 'folders', ['parent_folder_id'], ['id'])
    op.create_foreign_key('m2m_folders_folders_child_folder_id_fkey', 'm2m_folders_folders', 'folders', ['child_folder_id'], ['id'])
    op.drop_constraint(None, 'm2m_files_folders', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_files_folders', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_files_folders_file_id_fkey', 'm2m_files_folders', 'files', ['file_id'], ['id'])
    op.create_foreign_key('m2m_files_folders_folder_id_fkey', 'm2m_files_folders', 'folders', ['folder_id'], ['id'])
    op.add_column('files', sa.Column('file_link', sa.TEXT(), autoincrement=False, nullable=False))
    op.drop_column('files', 'path')
    op.drop_constraint(None, 'collaborations', schema='public', type_='foreignkey')
    op.create_foreign_key('collaborations_user_id_fkey', 'collaborations', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###
