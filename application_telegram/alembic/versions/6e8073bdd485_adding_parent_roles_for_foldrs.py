"""adding parent roles for foldrs

Revision ID: 6e8073bdd485
Revises: 13530118dfd8
Create Date: 2024-11-19 19:27:49.759821

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6e8073bdd485'
down_revision: Union[str, None] = '13530118dfd8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('m2m_folders_folders',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('parent_folder_id', sa.INTEGER(), nullable=False),
    sa.Column('child_folder_id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['child_folder_id'], ['public.folders.id'], ),
    sa.ForeignKeyConstraint(['parent_folder_id'], ['public.folders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('child_folder_id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_m2m_folders_folders_child_folder_id'), 'm2m_folders_folders', ['child_folder_id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_m2m_folders_folders_id'), 'm2m_folders_folders', ['id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_m2m_folders_folders_parent_folder_id'), 'm2m_folders_folders', ['parent_folder_id'], unique=False, schema='public')
    op.drop_constraint('collaborations_user_id_fkey', 'collaborations', type_='foreignkey')
    op.create_foreign_key(None, 'collaborations', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('m2m_files_folders_folder_id_fkey', 'm2m_files_folders', type_='foreignkey')
    op.drop_constraint('m2m_files_folders_file_id_fkey', 'm2m_files_folders', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_files_folders', 'files', ['file_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'm2m_files_folders', 'folders', ['folder_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('m2m_organizations_folders_organization_id_fkey', 'm2m_organizations_folders', type_='foreignkey')
    op.drop_constraint('m2m_organizations_folders_folder_id_fkey', 'm2m_organizations_folders', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_organizations_folders', 'organizations', ['organization_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'm2m_organizations_folders', 'folders', ['folder_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('m2m_users_folders_folder_id_fkey', 'm2m_users_folders', type_='foreignkey')
    op.drop_constraint('m2m_users_folders_user_id_fkey', 'm2m_users_folders', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_users_folders', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'm2m_users_folders', 'folders', ['folder_id'], ['id'], source_schema='public', referent_schema='public')
    op.drop_constraint('m2m_users_organizations_organization_id_fkey', 'm2m_users_organizations', type_='foreignkey')
    op.drop_constraint('m2m_users_organizations_user_id_fkey', 'm2m_users_organizations', type_='foreignkey')
    op.create_foreign_key(None, 'm2m_users_organizations', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'm2m_users_organizations', 'organizations', ['organization_id'], ['id'], source_schema='public', referent_schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'm2m_users_organizations', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_users_organizations', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_users_organizations_user_id_fkey', 'm2m_users_organizations', 'users', ['user_id'], ['id'])
    op.create_foreign_key('m2m_users_organizations_organization_id_fkey', 'm2m_users_organizations', 'organizations', ['organization_id'], ['id'])
    op.drop_constraint(None, 'm2m_users_folders', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_users_folders', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_users_folders_user_id_fkey', 'm2m_users_folders', 'users', ['user_id'], ['id'])
    op.create_foreign_key('m2m_users_folders_folder_id_fkey', 'm2m_users_folders', 'folders', ['folder_id'], ['id'])
    op.drop_constraint(None, 'm2m_organizations_folders', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_organizations_folders', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_organizations_folders_folder_id_fkey', 'm2m_organizations_folders', 'folders', ['folder_id'], ['id'])
    op.create_foreign_key('m2m_organizations_folders_organization_id_fkey', 'm2m_organizations_folders', 'organizations', ['organization_id'], ['id'])
    op.drop_constraint(None, 'm2m_files_folders', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'm2m_files_folders', schema='public', type_='foreignkey')
    op.create_foreign_key('m2m_files_folders_file_id_fkey', 'm2m_files_folders', 'files', ['file_id'], ['id'])
    op.create_foreign_key('m2m_files_folders_folder_id_fkey', 'm2m_files_folders', 'folders', ['folder_id'], ['id'])
    op.drop_constraint(None, 'collaborations', schema='public', type_='foreignkey')
    op.create_foreign_key('collaborations_user_id_fkey', 'collaborations', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_public_m2m_folders_folders_parent_folder_id'), table_name='m2m_folders_folders', schema='public')
    op.drop_index(op.f('ix_public_m2m_folders_folders_id'), table_name='m2m_folders_folders', schema='public')
    op.drop_index(op.f('ix_public_m2m_folders_folders_child_folder_id'), table_name='m2m_folders_folders', schema='public')
    op.drop_table('m2m_folders_folders', schema='public')
    # ### end Alembic commands ###
