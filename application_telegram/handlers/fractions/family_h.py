from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.enums.parse_mode import ParseMode

from handlers.main_h import sth_error
from keyboards.fractions import only_to_fractions_k


router = Router()


@router.callback_query(F.data == "family_menu")
async def family_menu(callback: CallbackQuery) -> None:
    try:
        text = (
            ">üç∫ –≠—Ç–æ —Ä–∞–∑–¥–µ–ª __*–°–µ–º—å—è*__, –ø–æ–∫–∞ —á—Ç–æ —Å—é–¥–∞ –Ω–µ—á–µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å, –Ω–æ –≤—Å–∫–æ—Ä–µ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è "
            "—Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –¥–ª—è —Å–µ–º–µ–π –∑–¥–µ—Å—å –º–æ–∂–µ—Ç —á—Ç–æ\-—Ç–æ –ø–æ—è–≤–∏—Ç—å—Å—è\."
        )
        markup_inline = only_to_fractions_k.get()
        await callback.message.delete()
        await callback.message.answer(
            text=text, reply_markup=markup_inline, parse_mode=ParseMode.MARKDOWN_V2
        )
    except Exception as exception:
        await sth_error(callback.message, exception)
